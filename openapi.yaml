openapi: 3.0.0
info:
  title: Proyek3
  version: 1.0.0
servers:
  - url: https://bp-promosi-umkm-0fd00e17451e.herokuapp.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Auth
  - name: Product
  - name: Category
  - name: Status
  - name: Users
  - name: Profile
paths:
  /users/register:
    post:
      tags:
        - Auth
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Ghaida Fasya Yuthika
                username: ghaidaa
                password: ghaida123
                email: ghaidaa@gmail.com
                phone_number: "081908915320"
                store:
                  store_name: Ghaida Store
                  address: Jalan Cihanjuang No.1
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /users/login:
    post:
      tags:
        - Auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: ghai
                password: ghaida123
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /insert/product:
    post:
      tags:
        - Product
      summary: Insert Product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user.id:
                  type: string
                  example: 678db51214a82ef8adbe67f7
                ProductName:
                  type: string
                  example: Thai Tea
                description:
                  type: string
                  example: Teh thailand
                price:
                  type: integer
                  example: "15000"
                status.id:
                  type: string
                  example: 67910940c6747400bebfe2cd
                category.id:
                  type: string
                  example: 6776bf9e30844cbcd9fa31b4
                image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /product:
    get:
      tags:
      - Product
      summary: Get All Product
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /product/{id}:
    get:
      tags:
        - Product
      summary: Get Product By ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /update/product/{id}:
    put:
      tags:
        - Product
      summary: Update Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ProductName:
                  type: string
                  example: Thai Tea
                description:
                  type: string
                  example: Teh khas thailand
                image:
                  type: string
                  format: binary
                price:
                  type: integer
                  example: "10000"
                category.id:
                  type: string
                  example: 6776bf9e30844cbcd9fa31b4
                user.id:
                  type: string
                  example: 678db51214a82ef8adbe67f7
                status.id:
                  type: string
                  example: 67811f31a6ffe1a1bca38c12
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /product/delete/{id}:
    delete:
      tags:
        - Product
      summary: Delete Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /product-seller:
    get:
      tags:
        - Product
      summary: Get Product By User ID
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /category:
    get:
      tags:
        - Category
      summary: Get All Category
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /insert/category:
    post:
      tags:
        - Category
      summary: Insert Category
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                category_name: Food
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /category/{id}:
    get:
      tags:
        - Category
      summary: Get Category By ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /category/delete/{id}:
    delete:
      tags:
        - Category
      summary: Delete Category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /update/category/{id}:
    put:
      tags:
        - Category
      summary: Update Category
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                category_name: Drink
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /statuses:
    get:
      tags:
        - Status
      summary: Get All Status
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /status/{id}:
    get:
      tags:
        - Status
      summary: Get Status By ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /users:
    get:
      tags:
        - Users
      summary: Get All Users
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /user/delete/{id}:
    delete:
      tags:
        - Users
      summary: Delete User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /users/profile:
    get:
      tags:
        - Profile
      summary: Get User Profile
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /update/users/profile:
    put:
      tags:
        - Profile
      summary: Update User Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Ghaida Fasya Yuthika
                username: ghai
                phone_number: "081908915320"
                email: ghaida12@gmail.com
                store:
                  store_name: Ghaida Store
                  address: Jalan Cihanjuang No.1
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
